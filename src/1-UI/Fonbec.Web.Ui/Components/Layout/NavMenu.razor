@implements IDisposable

@inject NavigationManager NavigationManager

<MudNavMenu>
    <MudNavLink Href="/" Match="NavLinkMatch.All">Home</MudNavLink>
    <MudNavLink Href="/counter" Match="NavLinkMatch.Prefix">Counter</MudNavLink>
    <MudNavLink Href="/weather" Match="NavLinkMatch.Prefix">Weather</MudNavLink>
    <MudNavLink Href="/auth" Match="NavLinkMatch.Prefix">Auth Required</MudNavLink>

    <AuthorizeView>
        <Authorized>
            <MudNavLink Href="/Account/Manage" Match="NavLinkMatch.Prefix">@context.User.Identity?.Name</MudNavLink>
            <form action="Account/Logout" method="post">
                <AntiforgeryToken />
                <input type="hidden" name="ReturnUrl" value="@_currentUrl" />
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Secondary">
                    Logout
                </MudButton>
            </form>
        </Authorized>
        <NotAuthorized>
            <MudNavLink Href="/Account/Login" Match="NavLinkMatch.Prefix">Login</MudNavLink>
        </NotAuthorized>
    </AuthorizeView>

</MudNavMenu>

@code {
    private string? _currentUrl;

    protected override void OnInitialized()
    {
        _currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        _currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
